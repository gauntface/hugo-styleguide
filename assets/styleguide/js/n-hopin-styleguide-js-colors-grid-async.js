function e(e){const t=e.split(/_|-/g),n=[];for(const e of t)""!=e&&n.push(e.charAt(0).toUpperCase()+e.slice(1).toLowerCase());return n.join(" ")}function t(t){const n=t.substring(t.lastIndexOf("/")+1);return e(n.substring(0,n.lastIndexOf(".")))}function n(e){const t=document.createElement("div");t.textContent=e,document.body.appendChild(t);var n=document.createRange();n.selectNode(t),window.getSelection().empty(),window.getSelection().addRange(n);let o=!1;try{o=document.execCommand("copy")}catch(e){console.log("Error thrown when copying text: ",e)}return window.getSelection().removeRange(n),document.body.removeChild(t),o}const o="n-hopin-styleguide-",s=`.${o}js-colors-grid`,a=`${o}c-swatch-group`,c=`${o}c-swatch`,r=`${o}c-swatch__hex-value`,d=`${o}c-swatch__var-value`,i=`${o}c-swatch__hex--light-color`,l=`${o}c-swatch__hex--dark-color`,h=`${o}c-swatch__color`,p=`${o}c-swatch__footer`,u=`${o}c-swatch__name`,m=`${o}c-swatch__copytext`;class f extends class{constructor(e){this.containerSelector=e}getGroups(){const n={};for(const o of document.styleSheets)try{if(!o.ownerNode.classList.contains("n-hopin-styleguide-js-load-static-css"))continue;if(!o.href)continue;if(n[o.href])continue;const s={prettyName:t(o.href),href:o.href,variables:[]},a=o;for(const t of a.cssRules){const n=t;if(n.styleMap){const t=n.styleMap;for(const n of t.entries()){const t=n[0];if(0===t.indexOf("--")){let o=n[1][0];s.variables.push({prettyName:e(t),variableName:t,value:o.toString().trim()})}}}}n[o.href]=s}catch(e){console.error(`Unable to read styles for ${o.href}`,e)}return Object.values(n)}render(){const e=document.querySelector(this.containerSelector);if(!e)return void console.warn(`Unable to find container with selector ${this.containerSelector}`);const t=this.getGroups();console.log("Rendering the following groups:",t);for(const n of t){const t=document.createElement("section");if(t.classList.add("n-hopin-styleguide-c-variable-group"),n.prettyName){const e=document.createElement("h2");e.classList.add("n-hopin-styleguide-c-variable-group__title"),e.textContent=n.prettyName,t.appendChild(e)}const o=this.renderData(n.variables);for(const e of o)t.appendChild(e);e.appendChild(t)}}}{constructor(){super(s),this.white=this.hexToRGB("#FFFFFF"),this.black=this.hexToRGB("#000000")}renderData(e){const t=document.createElement("div");t.classList.add(a);for(const o of e){const e=document.createElement("span");e.classList.add(r),e.textContent=o.value;const s=document.createElement("span");s.classList.add(d),s.textContent=o.variableName;const a=document.createElement("div");a.classList.add(h),a.style.backgroundColor=`var(${o.variableName})`,a.appendChild(s),a.appendChild(e);try{const t=this.varRGBColor(a),n=this.distance(t,this.black);n>this.distance(t,this.white)?(e.classList.add(l),s.classList.add(l)):(e.classList.add(i),s.classList.add(i))}catch(e){console.warn("Failed to check if swatch should have light or dark text: ",e)}const f=document.createElement("div");f.classList.add(p);const w=document.createElement("span");w.classList.add(u),w.textContent=o.prettyName;const g=document.createElement("div");g.classList.add(m),g.textContent="Copy",f.appendChild(w),f.appendChild(g);const v=document.createElement("div");v.classList.add(c),v.appendChild(a),v.appendChild(f),v.addEventListener("click",(e=>{e.preventDefault();n(o.variableName)&&(g.textContent="Copied",setTimeout((()=>{g.textContent="Copy"}),1e3))})),t.appendChild(v)}return[t]}varRGBColor(e){const t=document.createElement("div");t.style.display="none",document.body.appendChild(t),t.appendChild(e);const n=getComputedStyle(e).getPropertyValue("background-color");t.removeChild(e),t.parentNode.removeChild(t);const o=/rgba?\((\d*),\s*(\d*),\s*(\d*),?\s*\d*\.?\d*\)/.exec(n);if(!o)throw new Error(`Unable to parse computed style '${n}'`);return{Red:parseInt(o[1],16),Green:parseInt(o[2],16),Blue:parseInt(o[3],16)}}hexToRGB(e){let t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e.trim());if(!t){if(t=/^#?([a-f\d]{1})([a-f\d]{1})([a-f\d]{1})$/i.exec(e.trim()),!t){if(t=/^rgba?\((\d+),\s*(\d+),\s*(\d+).*\)$/i.exec(e.trim()),!t)throw new Error(`Unable to parse hex string '${e}'`)}t[1]=`${t[1]}${t[1]}`,t[2]=`${t[2]}${t[2]}`,t[3]=`${t[3]}${t[3]}`}return{Red:parseInt(t[1],16),Green:parseInt(t[2],16),Blue:parseInt(t[3],16)}}distance(e,t){const n=Math.pow(e.Red-t.Red,2)+Math.pow(e.Green-t.Green,2)+Math.pow(e.Blue-t.Blue,2);return Math.sqrt(n)}}window.addEventListener("load",(function(){document.querySelector(s)&&(new f).render()}));
